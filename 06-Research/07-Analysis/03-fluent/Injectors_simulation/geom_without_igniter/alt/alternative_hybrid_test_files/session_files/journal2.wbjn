# encoding: utf-8
# 2022 R1
SetScriptVersion(Version="22.1.217")
system1 = GetSystem(Name="FLTG")
system1.Delete()
template1 = GetTemplate(TemplateName="Mesh")
system2 = template1.CreateSystem()
fileType1 = GetFileType(Name="GeometryFileType")
ImportFile(
    FilePath="C:/Users/Piotrek/Desktop/SYS_1-8 copy.scdoc",
    FileType=fileType1)
geometryComponent1 = system2.GetComponent(Name="Geometry")
system3 = GetSystem(Name="Geometry")
geometryComponent2 = system3.GetComponent(Name="Geometry")
geometryComponent1.ReplaceWithShare(
    TargetSystem=system2,
    ComponentToShare=geometryComponent2,
    SourceSystem=system3)
system2.Delete()
template2 = GetTemplate(TemplateName="FLTG")
system4 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system3)
meshComponent1 = system4.GetComponent(Name="Mesh")
geometryComponent2.TransferData(TargetComponent=meshComponent1)
setup1 = system4.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=3, NumberOfProcessors=3))
tGridData1 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=3))
mesh1 = system4.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.setState(r'm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.setState(r'm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.setState(r'm^3')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.433521 -0.81897 0.240273) '(0 0 0) '(0.315824 0.253939 0.293912) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0339668 -0.326262 0.31733) '(0 0 0) '(0.111383 0.135372 0.126894) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.123723 -0.649889 0.454711) '(0 0 0) '(0.193097 0.218788 0.279696) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'sys_1-8-copy-cia-o-sta-e'],r'BOISize': 0.0005,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'sys_1-8-copy-cia-o-sta-e'],r'BOISize': 0.0005,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.332698 0.284379 -0.583767) '(0 0 0) '(-0.109675 -0.0692587 -0.0840763) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.449678 -0.0199254 0.511522) '(0 0 0) '(0.0145449 -0.000720739 -0.0208751) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.413336 0.199159 -0.706101) '(0 0 0) '(-0.100969 -0.0676364 -0.0291768) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIFaceLabelList': [r'outlet'],r'BOISize': 0.01,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'facesize_1',r'BOIFaceLabelList': [r'outlet'],r'BOISize': 0.01,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_1'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.20925 -0.144504 0.386959) '(0 0 0) '(0.114819 0.0892161 0.0727658) 0 0)(cx-use-window-id 51)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.576498 -0.275144 -2.26591) '(0 0 0) '(-0.479821 -0.385022 0.345397) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.523238 0.468221 0.421587) '(0 0 0) '(0.0311174 0.0460335 -0.162005) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.115271 0.0696352 1.55824) '(0 0 0) '(0.106605 0.139781 0.0167765) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.793048 -0.627631 0.619146) '(0 0 0) '(0.0444095 0.030764 -0.0823743) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',r'BOIFaceLabelList': [r'inlet_oxidizer'],r'BOISize': 0.05,r'DrawSizeControl': True,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'facesize_2',r'BOIFaceLabelList': [r'inlet_oxidizer'],r'BOISize': 0.05,r'DrawSizeControl': True,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.setState({r'AddChild': r'yes',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.579801 0.233943 -0.1796) '(0 0 0) '(0.0146969 0.0322483 0.158438) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.160579 0.170755 -0.201787) '(0 0 0) '(0.144599 0.0794522 -0.216261) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Filter*zone")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Filter*position")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Filter*node")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-1.76477 -0.638601 0.43529) '(0 0 0) '(0.660733 0.161616 0.0911175) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0339697 0.00911113 -0.0194809) '(0 0 0) '(0.0689199 -0.00865573 0.0268489) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0282883 -0.0515833 0.0259578) '(0 0 0) '(-0.019802 0.00587362 0.02039) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.237574 -0.150446 -0.131178) '(0 0 0) '(-0.0425739 0.0103824 0.100698) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.546737 0.0683792 0.26947) '(0 0 0) '(0.0414919 -0.00859207 -0.0793644) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0180878 0.141632 -0.028582) '(0 0 0) '(0.0455814 -0.0164609 -0.0691694) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'facesize_2',r'BOIFaceLabelList': [r'inlet_oxidizer'],r'BOISize': 0.01,r'DrawSizeControl': True,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.017065 0.0702881 -0.0110985) '(0 0 0) '(0.00981955 -0.00890005 -0.0412746) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.499332 -0.0366198 0.0786592) '(0 0 0) '(-0.00816961 -0.00628 -0.0409172) 0 0)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-1.4246 0.293503 -0.969347) '(0 0 0) '(0.134891 -0.0290986 0.0723876) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.179561 0.129318 0.183311) '(0 0 0) '(0.0711557 -0.0400543 -0.0464098) 0 0)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.509458 -0.332777 0.599988) '(0 0 0) '(-0.0716065 0.0443696 0.0767314) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.setState({r'CFDSurfaceMeshControls': {r'MaxSize': 0.0075,r'MinSize': 0.00075,},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.249566 0.160149 -0.21704) '(0 0 0) '(0.0257499 -0.0158659 -0.0374985) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(1.30757 -0.291 0.409692) '(0 0 0) '(-0.068396 0.00598741 -0.0961089) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.976406 -0.321648 -0.460492) '(0 0 0) '(-0.0734222 0.0139121 -0.0310396) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.552603 0.035115 -2.62557) '(0 0 0) '(-0.535612 -0.0272394 -0.0474762) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.400541 0.269124 1.06705) '(0 0 0) '(0.0989452 0.0478395 0.0721781) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.370502 0.321321 1.4038) '(0 0 0) '(0.0812077 -0.0330941 -0.134945) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00592567 -0.0364883 0.00274628) '(0 0 0) '(0.179639 0.059742 0.180587) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0197247 0.00061414 -0.0655537) '(0 0 0) '(-0.108527 -0.00354201 -0.0247191) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.111292 -0.109036 0.184548) '(0 0 0) '(0.448112 -0.0675874 0.337654) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00210348 -0.0544524 -0.0354713) '(0 0 0) '(0.103248 -0.0879334 0.15174) 0 0)")
geometry1 = system3.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=3))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command="/file/set-tui-version \"22.1\"(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.05915 -0.348314 0.315006) '(0 0 0) '(0.117865 0.142966 0.137576) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=3))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'boi'],r'BOISize': 0.0005,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0161447 -0.222264 0.241184) '(0 0 0) '(0.076484 0.0986853 0.0860722) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.040127 -0.03208 -0.0114954) '(0 0 0) '(0.0872738 0.0834935 0.103893) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0011811 0.12152 -0.264038) '(0 0 0) '(-0.343084 -0.277951 -0.09592) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0698783 -0.391714 0.238962) '(0 0 0) '(0.699415 0.352287 0.672522) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Revert()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0281962 -0.0652825 0.0391627) '(0 0 0) '(0.171314 0.180728 0.177952) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0830728 -0.0560279 -0.0784587) '(0 0 0) '(0.117274 0.0677944 0.116893) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOISize': 0.0005,})\")")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=3))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command="/file/set-tui-version \"22.1\"(cx-gui-do cx-activate-tab-index \"NavigationPane*Frame1(TreeTab)\" 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0208615 -0.0417224 0.0280746) '(0 0 0) '(0.0991281 0.117646 0.101144) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.159166 -0.181593 0.0195949) '(0 0 0) '(0.166395 0.175873 0.169761) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'geom-boi'],r'BOIPatchingtoggle': True,r'BOISize': 0.0005,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0443396 0.0109129 -0.128972) '(0 0 0) '(-0.106716 -0.0603273 -0.029439) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.108795 0.0992897 0.309678) '(0 0 0) '(0.087682 0.0647998 0.062873) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0866373 0.00820771 -0.195415) '(0 0 0) '(-0.111743 -0.0124002 0.160147) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'geom-boi'],r'BOIPatchingtoggle': False,r'BOISize': 0.0005,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.00496772 0.0255354 -0.0486105) '(0 0 0) '(-0.0763302 -0.0710305 -0.0130821) 0 0)")
geometry1.Edit(IsSpaceClaimGeometry=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=3))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.0911441 -0.0465695 -0.255681) '(0 0 0) '(-0.124747 0.0401759 0.273576) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0416837 -0.00512263 0.263587) '(0 0 0) '(0.179454 0.0875196 -0.0973599) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOIPatchingtoggle': False,r'BOISize': 0.0005,})\")")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=3))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "22.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Arguments.setState({r'AddChild': r'yes',r'BOIControlName': r'boi_1',r'BOIExecution': r'Body Of Influence',r'BOIFaceLabelList': [r'component1-boi'],r'BOIPatchingtoggle': False,r'BOISize': 0.0005,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boi_1'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0202948 0.00498655 -0.150577) '(0 0 0) '(-0.416044 -0.549585 0.131143) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0103593 0.0298291 0.29082) '(0 0 0) '(0.115042 0.325861 0.0156321) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['facesize_2'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0898641 0.00614223 -0.271282) '(0 0 0) '(-0.16064 -0.609848 0.109749) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0251631 0.00652817 0.278642) '(0 0 0) '(-0.021974 0.137285 0.0634232) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.110821 -0.0366333 -0.267398) '(0 0 0) '(0.106371 -0.484555 0.258087) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0532054 0.0319004 0.254071) '(0 0 0) '(-0.071256 0.159622 -0.0360848) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.setState({r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.setState({r'InvokeShareTopology': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.setState({r'BoundaryLabelList': [r'inlet_grain', r'inlet_oxidizer', r'outlet'],r'BoundaryLabelTypeList': [r'wall', r'mass-flow-inlet', r'outflow'],r'OldBoundaryLabelList': [r'inlet_grain', r'inlet_oxidizer', r'outlet'],r'OldBoundaryLabelTypeList': [r'velocity-inlet', r'velocity-inlet', r'pressure-outlet'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'AddPeriodic')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Set Up Periodic Boundaries'].Arguments.setState({r'LCSOrigin': {r'OriginX': 0,r'OriginY': 0,r'OriginZ': 0,},r'LCSVector': {r'VectorX': 0,r'VectorY': 0,r'VectorZ': 0,},r'LabelList': None,r'ListAllLabelToggle': False,r'MeshObject': r'',r'Method': r'Automatic - pick both sides',r'PeriodicityAngle': 45,r'RemeshBoundariesOption': r'auto',r'SelectionType': r'label',r'TransShift': {r'ShiftX': 0,r'ShiftY': 0,r'ShiftZ': 1,},r'Type': r'Rotational',r'ZoneList': None,r'ZoneLocation': None,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Set Up Periodic Boundaries'].Arguments.setState({r'LCSOrigin': {r'OriginX': 0,r'OriginY': 0,r'OriginZ': 0,},r'LCSVector': {r'VectorX': 0,r'VectorY': 0,r'VectorZ': 0,},r'LabelList': [r'periodic_1', r'periodic_2'],r'ListAllLabelToggle': False,r'MeshObject': r'',r'Method': r'Automatic - pick both sides',r'PeriodicityAngle': 45,r'RemeshBoundariesOption': r'auto',r'SelectionType': r'label',r'TransShift': {r'ShiftX': 0,r'ShiftY': 0,r'ShiftZ': 1,},r'Type': r'Rotational',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Set Up Periodic Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.386361 -0.182179 -0.109422) '(0 0 0) '(0.214664 -0.360401 -0.123126) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0561575 0.0192287 0.0581883) '(0 0 0) '(-0.0740604 0.0875016 0.0281997) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0684658 0.00467163 -0.133124) '(0 0 0) '(0.0405504 -0.04604 -0.0496156) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0368622 -0.414448 0.342936) '(0 0 0) '(0.288711 -0.195713 -0.187506) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.230023 -0.065705 0.0980872) '(0 0 0) '(-0.19208 0.109051 0.110363) 0 0)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.270956 -0.183467 -0.0499446) '(0 0 0) '(0.00817513 -0.0204694 0.0643066) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.0295533 0.0485629 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -0.0346956 0.0382213 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.349794 -0.290713 -0.327478) '(0 0 0) '(-0.151772 0.168972 0.219288) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.0130957 -0.00580043 0)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.43163 0.215664 -1.915) '(0 0 0) '(0.391462 -0.328783 0.00287355) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -0.131199 -0.0842264 0)(cx-use-window-id 51)(dolly-camera -0.0833405 -0.0530626 0)(cx-use-window-id 51)(cx-set-camera-relative '(-1.5204 0.41682 -0.699142) '(0 0 0) '(-0.0376897 0.0439249 0.128292) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.106299 0.0648234 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.358921 -0.636165 0.206691) '(0 0 0) '(0.00830203 0.109117 0.252556) 0 0)(cx-use-window-id 51)(dolly-camera 0.0705422 0.0259347 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.0203636 0.0844595 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.940529 -0.240996 0.733342) '(0 0 0) '(-0.151537 0.0365102 -0.12574) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.0713642 0.0303485 0)(cx-use-window-id 51)(dolly-camera 0.0135471 0.0287092 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({r'FaceScope': {r'GrowOn': r'selected-zones',},r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': False,},r'NumberOfLayers': 4,r'ZoneSelectionList': [r'walls'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['smooth-transition_1'].Arguments.setState({r'BLControlName': r'smooth-transition_1',r'FaceScope': {r'GrowOn': r'selected-zones',},r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': False,},r'NumberOfLayers': 4,r'ZoneSelectionList': [r'walls'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['smooth-transition_1'].Execute()\")")
setup1.SendCommand(Command='(cx-use-window-id 51)(handle-key "control ??")(cx-use-window-id 51)(dolly-camera -0.00479424 0.0235505 0)')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0223379 0.0784961 -0.118999) '(0 0 0) '(0.0881907 -0.117945 -0.142398) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0500262 -0.077478 0.0686562) '(0 0 0) '(-0.268528 0.400884 0.230706) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({r'BlLabelList': [r'injectors'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'FirstHeight': 2.388115335962305e-07,r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': True,},r'NumberOfLayers': 6,r'OffsetMethodType': r'uniform',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildToTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].InsertCompoundChildTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['uniform_1'].Arguments.setState({r'BLControlName': r'uniform_1',r'BlLabelList': [r'injectors'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'FirstHeight': 2.388115335962305e-07,r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': True,},r'NumberOfLayers': 6,r'OffsetMethodType': r'uniform',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.setState({})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['uniform_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0365111 -0.00874707 -0.00288182) '(0 0 0) '(-0.0417644 0.10457 0.0123181) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['uniform_1'].Revert()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['uniform_1'].Arguments.setState({r'BLControlName': r'last-ratio_1',r'BLRegionList': [r'component1-solid1'],r'BLZoneList': [r'injectors'],r'BlLabelList': [r'injectors'],r'CompleteBlLabelList': [r'injectors'],r'FaceScope': {r'GrowOn': r'selected-labels',},r'FirstHeight': 2.388115335962305e-07,r'LocalPrismPreferences': {r'ShowLocalPrismPreferences': True,},r'NumberOfLayers': 6,r'OffsetMethodType': r'last-ratio',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['uniform_1'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-1.46106 -2.10844 0.703152) '(0 0 0) '(0.242081 0.19658 0.841805) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.50154 1.34997 -0.162567) '(0 0 0) '(0.328215 0.0411024 -0.66187) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0129111 0.0242931 -0.00135374) '(0 0 0) '(0.0191191 -0.011726 -0.0283768) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera -0.020841 -0.050392 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(dolly-camera 0.0052098 -0.0217386 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.783373 -0.512003 -2.53836) '(0 0 0) '(0.0641033 0.0502429 0.250585) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.629292 0.434101 -0.644327) '(0 0 0) '(0.202174 -0.0537867 0.195395) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.202661 0.286816 0.359588) '(0 0 0) '(0.0684477 -0.041152 0.0783799) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
